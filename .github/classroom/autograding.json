{
  "tests": [
    {
      "name": "PriceFormatterTest: original code",
      "setup": "",
      "run": "./gradlew test --tests PriceFormatterTest && touch success.txt",
      "comment": "The original code should not have any bugs, so the tests written by the student should pass",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 0
    },
    {
      "name": "PriceFormatterTest: bug #1 - tests should not pass",
      "setup": "[ -f success.txt ] && cp .github/classroom/bug1.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "! ./gradlew clean test --tests PriceFormatterTest",
      "comment": "This test uses a buggy version of PriceFormatter.java. The test should fail, so the return value is reversed using (!).",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 10
    },
    {
      "name": "PriceFormatterTest: bug #2  - tests should not pass",
      "setup": "[ -f success.txt ] && cp .github/classroom/bug2.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "! ./gradlew clean test --tests PriceFormatterTest",
      "comment": "This test uses a buggy version of PriceFormatter.java. The test should fail, so the return value is reversed using (!).",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 10
    },
    {
      "name": "PriceFormatterTest: bug #3  - tests should not pass",
      "setup": "[ -f success.txt ] && cp .github/classroom/bug3.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "! ./gradlew clean test --tests PriceFormatterTest",
      "comment": "This test uses a buggy version of PriceFormatter.java. The test should fail, so the return value is reversed using (!).",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 10
    },
    {
      "name": "PriceFormatterTest: bug #4  - tests should not pass",
      "setup": "[ -f success.txt ] && cp .github/classroom/bug4.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "! ./gradlew clean test --tests PriceFormatterTest",
      "comment": "This test uses a buggy version of PriceFormatter.java. The test should fail, so the return value is reversed using (!).",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 10
    },
    {
      "name": "PriceFormatterTest: bug #5  - tests should not pass",
      "setup": "[ -f success.txt ] && cp .github/classroom/bug5.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "! ./gradlew clean test --tests PriceFormatterTest",
      "comment": "This test uses a buggy version of PriceFormatter.java. The test should fail, so the return value is reversed using (!).",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 10
    },
    {
      "name": "Clean up after PriceFormatterTests",
      "setup": "cp .github/classroom/PriceFormatter.txt src/main/java/price/formatter/PriceFormatter.java",
      "run": "echo 'Restored the original PriceFormatter.java after mutation tests'",
      "comment": "Previous tests use buggy versions of PriceFormatter.java. This command restores the original file.",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 0
    },
    {
      "name": "DayOfYearTest: running your own tests",
      "setup": "{ find -name DayOfYearTest.java | grep DayOfYearTest.java; } || { echo 'DayOfYearTest.java not found'; false; }",
      "run": "./gradlew test --tests DayOfYearTest || true",
      "comment": "Setup verifies that the class has been added. Points are awarded even if the tests fail, as the class under test is expected to contain bugs.",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 25
    },
    {
      "name": "DayOfYearTest: verifying your fixes",
      "setup": "cp .github/classroom/DOYTest.txt src/test/java/DOYTest.java",
      "run": "./gradlew test --tests DOYTest",
      "comment": "The DOYTest provider in the classroom folder contains tests that are expected to pass after the bugs have been fixed.",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 1,
      "points": 25
    }
  ]
}
